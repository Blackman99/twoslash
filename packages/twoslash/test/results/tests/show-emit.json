{
  "code": "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet MyComponent = class MyComponent {\n    Service;\n    constructor(Service) {\n        this.Service = Service;\n    }\n    method(x) { }\n};\n__decorate([\n    decorator\n], MyComponent.prototype, \"method\", null);\nMyComponent = __decorate([\n    decorator\n], MyComponent);\nexport {};\n",
  "nodes": [],
  "flags": [
    {
      "type": "compilerOptions",
      "name": "experimentalDecorators",
      "value": true,
      "start": 0,
      "end": 27
    },
    {
      "type": "handbookOptions",
      "name": "showEmit",
      "value": true,
      "start": 27,
      "end": 40
    },
    {
      "type": "handbookOptions",
      "name": "showEmittedFile",
      "value": "component.js",
      "start": 40,
      "end": 74
    }
  ]
}